#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long
#define ll int
#define vi vector<int>
#define vvi vector<vector<int>>
#define fo(i,a,b) for(int i=a;i<b;i++)
#define all(x) x.begin(),x.end()
#define trav(x) for(auto it=x.begin();it!=x.end();it++)
#define mod 1000000007
#define Endl endl
#define pb push_back
#define mp make_pair
#define inf 1e9
#define linf 1e18
#define ld long double
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
#define watch(x) cout << (#x) << " is " << (x) << endl
#define debug(a) cerr << #a << ": " << a << endl
#define ordered_set tree<ii safeseq.push_back(i);
#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define minheap priority_queue<int,vector<int>,greater<int>>
//#define minheap priority_queue<ii,vector<ii>,greater<ii>> //for min heap of pair
//order_of_key (k) : Number of items strictly smaller than k .
//find_by_order(k) : K-th element in a set (counting from zero)


/***************************************************************************************************/

const int N=1000005;
const int LIM=200005;

int mat[1005][1005];
int psum[1005][1005];

void solve()
{
    int n,m;
    cin>>n>>m;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            cin>>mat[i][j];

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            psum[i][j] = mat[i][j];
            if(i-1 >=0)
                psum[i][j]+=psum[i-1][j];
            if(j-1 >=0)
                psum[i][j]+= psum[i][j-1];
            if(i-1 >=0 && j-1>=0)
                psum[i][j]-=psum[i-1][j-1];
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
            cout<<psum[i][j]<<" ";
        cout<<endl;
    }

    //query to find sum of rectangle from (r1,c1) to (r2,c2)
    int q = 1;
    int r1 = 1, c1=1, r2=2, c2=3;
    while(q--)
    {
        int ans=0;
        ans+=psum[r2][c2];
        cout<<ans<<Endl;
        if(c1-1>=0)
            ans-=psum[r2][c1-1];
        if(r1-1>=0)
            ans-=psum[r1-1][c2];
        if(r1-1>=0 && c1-1>=0)
            ans+=psum[r1-1][c1-1];
        cout<<ans<<Endl;
    }

}
int32_t main()
{
 fastio
//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
  int t=1;
 // cin>>t;
  for(int i=1;i<=t;i++)
  {
    //cout<<"Case #"<<i<<": ";
    solve();
  }
 return 0;
}
