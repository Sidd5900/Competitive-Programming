#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long
#define ll int
#define vi vector<int>
#define vvi vector<vector<int>>
#define fo(i,a,b) for(i=a;i<b;i++)
#define all(x) x.begin(),x.end()
#define trav(x) for(auto it=x.begin();it!=x.end();it++)
#define mod 1000000007
#define Endl endl
#define pb push_back
#define inf 1e18
#define INF 1e18
#define ld long double
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
#define watch(x) cout << (#x) << " is " << (x) << endl
#define debug(a) cerr << #a << ": " << a << endl
#define ordered_set tree<ii, null_type, less<ii>, rb_tree_tag, tree_order_statistics_node_update>//ii->multiset ,int->set
#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define minheap priority_queue<int,vector<int>,greater<int>>
//order_of_key (k) : Number of items strictly smaller than k .
//find_by_order(k) : K-th element in a set (counting from zero)


/***************************************************************************************************/
int i,j,k;
const int N   = 200005;
const int LIM=1000005;
//bit[i] will store the count of integer i
int bit[N];

void update(int i, int x){
	for(; i < N; i += (i&-i))
		bit[i] += x;
}

int sum(int i){
	int ans = 0;
	for(; i > 0; i -= (i&-i))
		ans += bit[i];
	return ans;
}

void solve()
{
    int n;
    cin>>n;
    vi a(n,0);
    fo(i,0,n)
        cin>>a[i];
    vi temp=a;
    sort(all(temp));
    fo(i,0,n)
    {
        a[i]=lower_bound(temp.begin(),temp.end(),a[i])-temp.begin()+1;
    }

    memset(bit,0,sizeof(bit));
    int invcnt=0;
    fo(i,0,n)
    {
        invcnt+=sum(N-1)-sum(a[i]);
        update(a[i],1);//increase cnt of a[i] in bit
    }
    cout<<invcnt<<Endl;


}
int32_t main()
{
 fastio

// For getting input from input.txt file
//freopen("input.txt", "r", stdin);
// Printing the Output to output.txt file
//freopen("output.txt", "w", stdout);

  int t=1;
  cin>>t;
  for(int i=1;i<=t;i++)
  {
    //cout<<"Case #"<<i<<": ";
    solve();
  }
 return 0;
}
