#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long
#define ll int
#define vi vector<int>
#define vvi vector<vector<int>>
#define fo(i,a,b) for(i=a;i<b;i++)
#define all(x) x.begin(),x.end()
#define trav(x) for(auto it=x.begin();it!=x.end();it++)
#define mod 1000000007
#define Endl endl
#define pb push_back
#define mp make_pair
#define inf 1e18
#define INF 1e18
#define ld long double
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
#define watch(x) cout << (#x) << " is " << (x) << endl
#define debug(a) cerr << #a << ": " << a << endl
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>//ii->multiset ,int->set
#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define minheap priority_queue<int,vector<int>,greater<int>>
//#define minheap priority_queue<ii,vector<ii>,greater<ii>> //for min heap of pair
 
 
 
/***************************************************************************************************/
ll i,j,k;
const int LIM   = 2505;
const int N=100005;
int n,m;
int dis[LIM];
 
vector<pair<int,pair<int,int>>>edge;
 
void solve()
{
cin>>n>>m;
    int a,b,c;
    fo(i,0,m){
    	cin>>a>>b>>c;
    	edge.push_back({a,{b,c}});
    }
    fo(i,1,n+1)dis[i]=inf;
    dis[1]=0;
    int till;
    vi baap(n+1,-1);
    fo(i,0,n+1){
    	till=-1;
    		for(auto e :edge){
                int u=e.first;
                int v=e.second.first;
                int w=e.second.second;
    			if(dis[v]>dis[u]+w){
    				dis[v]=dis[u]+w;
    				baap[v]=u;
    				till=v;
    			}
    		}
    	}
 
 
 
 	if(till==-1){
 		cout<<"NO"<<endl;
 		return;
 
 	}
 
 
 	cout<<"YES"<<endl;
 	fo(i,0,n){
 		till=baap[till];
 	}
 	vi cyc;
 
 	for(int aa=till;;aa=baap[aa]){
 
 		cyc.pb(aa);
 		if(cyc.size()>1&&aa==till){
 			break;
 		}
 	}
 	reverse(all(cyc));
 	for(auto x:cyc)
        cout<<x<<" ";
 
}
 
 
 
int32_t main()
{
 //fastio
  int t=1;
//cin>>t;
 
 
  for(int i=1;i<=t;i++)
  {
    //cout<<"Case #"<<i<<": ";
 
 
   solve();
  // cout<<endl;
 
  }
 
 return 0;
 
}